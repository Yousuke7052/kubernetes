# 使用kubeadm部署集群
### 1.環境準備
##### [~]# lsb_release -a
##### No LSB modules are available.
##### Distributor ID: Ubuntu
##### Description:    Ubuntu 20.04.6 LTS
##### Release:        20.04
##### Codename:       focal
##### [~]# sudo apt update
##### 靜態IP設定
##### master 2c2g 192.168.205.200
##### node1 2c2g 192.168.205.201
##### node2 2c2g 192.168.205.202
####### [~]# sudo apt install vim
####### [~]# sudo apt install net-tools
####### [~]# sudo cp /etc/netplan/01-network-manager-all.yaml 01-network-manager-all.yaml.bak
####### [~]# vim cp /etc/netplan/01-network-manager-all.yaml         # 改ip用
####### 改成下面這樣,縮進不能有閃失
####### #>>>>>>>
####### network:
#######   version: 2
#######   renderer: NetworkManager
#######   ethernets:
#######     ens33:
#######       dhcp4: no
#######       addresses:
#######         - 192.168.205.200/24
#######       gateway4: 192.168.205.2
#######       nameservers:
#######         addresses: [8.8.8.8, 8.8.4.4]
####### #<<<<<<<
####### [~]# sudo netplan apply
####### 三台可同步操作
####### [~]# sudo apt install vim
####### [~]# sudo apt install net-tools

### 2.集群安裝環境準備
##### 1)各節點主機名解析
####### 三台可同步操作
####### [~]# vim /etc/hosts
####### 192.168.205.200 master                                        # 三台主機皆輸入這三行內容至文件中
####### 192.168.205.201 node1                                         # 三台主機皆輸入這三行內容至文件中
####### 192.168.205.202 node2                                         # 三台主機皆輸入這三行內容至文件中

##### 2)關閉防火牆、關閉seLinux
####### 三台可同步操作
####### # 停用和禁用 ufw（防火牆）
####### [~]# sudo ufw disable
####### # 停用和禁用 apparmor（安全框架）
####### [~]# sudo systemctl stop apparmor
####### [~]# sudo systemctl disable apparmor
####### # 確認 ufw 和 apparmor 的狀態
####### [~]# sudo ufw status
####### [~]# sudo aa-status
##### 3)關閉交換分區
####### 做k8s,不需要用交換分區,交換分區:物理內存不夠時會使用,用了會導致運行速度很慢,因為交換分區是在硬盤讀寫速度慢於內存
####### 三台可同步操作
####### # 禁用 SWAP
####### [~]# sudo swapoff -a
####### [~]# sudo sed -i '/ swap / s/^/#/' /etc/fstab
####### [~]# free -have                                               # Swap那一行會顯示為0 有total,used,free
##### 4)各節點主機時間同步
####### 分開操作
####### master機台操作:
####### [~]# sudo apt update
####### [~]# sudo apt install chrony
####### [~]# vim /etc/chrony/chrony.conf
####### server 0.ubuntu.pool.ntp.org iburst
####### server 1.ubuntu.pool.ntp.org iburst
####### server 2.ubuntu.pool.ntp.org iburst
####### server 3.ubuntu.pool.ntp.org iburst
####### #Allow NTP client access from local network.
####### #allow 192.168.0.0/16
####### 這行新增自己設定的網段,就是205
####### allow 192.168.205.0/24
####### [~]# netstat -tunlp                                            # 時間同步服務佔用123,323兩個端口,
#######                                                                # 默認開啟323,客戶端用的,123服務端用
####### [~]# systemctl restart chronyd
####### [~]# netstat -tunlp
####### node機台操作:
####### [~]# vim /etc/chrony.conf
####### #server 0.ubuntu.pool.ntp.org iburst
####### #server 1.ubuntu.pool.ntp.org iburst
####### #server 2.ubuntu.pool.ntp.org iburst
####### #server 3.ubuntu.pool.ntp.org iburst
####### server 192.168.205.200 iburst
####### [~]# systemctl restart chronyd
####### [~]# chronyc sources -v                                         # Name/IP address下應該為^* master
#######                                                                 # 若*是?就有問題了 問號表示沒連接上master時間
##### 5)配置網路模塊與參數
####### 查看模塊是否加載
####### [~]# lsmod | grep overlay                                       # 若沒加載會沒訊息
####### [~]# lsmod | grep br_netfilter                                  # 若沒加載會沒訊息
####### [~]# modprobe -a overlay
####### [~]# modprobe -a br_netfilter
####### [~]# lsmod | grep overlay                                       
####### [~]# lsmod | grep br_netfilter                                  
####### [~]# cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
#######      overlay
#######      br_netfilter
#######      ip_vs
#######      ip_vs_wrr
#######      ip_vs_sh
#######      ip_vs_rr
#######      EOF
####### 修改網橋網路參數:解決於iptables被繞過而導致流量路由不正確問題
####### [~]# cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
#######      net.ipv4.ip_forward = 1
#######      vm.swappiness = 0
#######      net.bridge.bridge-nf-call-ip6tables = 1
#######      net.bridge.bridge-nf-call-iptables = 1
#######      EOF
####### [~]# sudo sysctl --system
####### 檢查內核參數,以下四行結果分別為1, 0, 1, 1
####### [~]# sysctl net.ipv4.ip_forward
####### [~]# sysctl vm.swappiness
####### [~]# sysctl net.bridge.bridge-nf-call-ip6tables
####### [~]# sysctl net.bridge.bridge-nf-call-iptables
####### 安裝container
####### [~]# sudo apt install -y containerd
####### 配置container
####### [~]# sudo mkdir -p /etc/containerd
####### [~]# containerd config default | sudo tee /etc/containerd/config.toml
####### 重啟container
####### [~]# sudo systemctl restart containerd
####### 檢查container
####### [~]# sudo systemctl status containerd
####### [~]# ctr version


sudo apt install -y curl apt-transport-https ca-certificates gnupg

# 添加 Kubernetes 的 GPG 密钥
curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg

# 创建 Kubernetes 的 APT 仓库配置文件
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt update
sudo apt install -y kubelet=1.26.3-00 kubeadm=1.26.3-00 kubectl=1.26.3-00

### 3.安裝核心組件
##### 1)準備yum源(baes源,epl源,docker源)
####### 1-1.base源,用的aliyun,並參考yum源更換.txt
####### 1-2.epl源
####### [~]# sudo yum install -y epel-release                           # 這邊用的是CentOS8, wget抓aliyun失敗
####### [~]# ls /etc/yum.repos.d/epel*.repo                             # 驗證epel源是否已添加
####### 1-3.docker源
####### [~]# sudo yum install -y yum-utils
####### [~]# wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo
####### [~]# 
##### 2)安裝docker引擎和container (安裝docker可以提供容器的運行環境,但不支持管理docker去管理容器)
####### 三台可同步操作
####### [~]# yum -y install docker-ce-20.10.16 docker-ce-cli-20.10.16 containerd.io
####### [~]# systemctl enable docker
####### [~]# systemctl start docker
####### 這邊如果不使用docker,直接安裝container就可以
####### [~]# yum -y install conatinerd                                  # 若產生衝突 用下一行
####### [~]# sudo yum -y install conatinerd.io --allowerasing           # containerd.io-1.6
##### 3)配置鏡像加速器,不使用docker,就不用跑這個鏡像加速了,跳過
####### [~]# $ cat > /etc/docker/daemon.json << EOF
####### [~]# {
####### [~]# "registry-mirrors": ["https://hub-mirror.c.163.com"]
####### [~]# }
####### [~]# EOF
####### [~]# $ systemctl restart docker
##### 4)準備k8s組件的yum源
####### [~]# 
##### 5)
##### 做到enable
##### 先不要start
####### [~]# 
##### 6)修改容器運行時配置文件
####### 初始化前需要修改container服務的配置文件
####### [~]# 

##### 7)初始化集群
####### master機台操作:
####### [~]# 

